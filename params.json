{
  "name": "MAE224",
  "tagline": "Integrate Science Laboratory",
  "body": "# Introduction\r\nMAE 224 is the Integrate Science Lab...\r\n\r\n##Prequisites\r\n\r\n### Python\r\nIf you want to run the Python code make sure that you have the most up-to-date version of Python 2.7.x.\r\nFurthermore, if you wish to be able to flash local code to the Particle Photon, you will need to install the requests module.\r\nThis can be done by simply entering\r\n\r\n```\r\npip install requests\r\n```\r\ninto the terminal\r\n\r\n###Matlab\r\nThe Matlab code has been designed to utilize the latest version of Matlab (currently 2016a). Matlab does not support HTML PUT requests. Currently, Matlab will call cURL from a unix terminal to upload local code. This functionality will be added in later editions.  \r\n***\r\n#Tutorials & Documentations\r\n## [Setup  ](https://github.com/mkfu/MAE224/wiki/A-Quick-Setup-of-Particle-Photon)  \r\nQuickly setup your new Photon on the lab computers\r\n\r\n## [Class Description](https://github.com/mkfu/MAE224/wiki/Class-Description-:-Functions-and-Variables)\r\nDescription of the functions and variables in the Photon class and how to access them from Python\r\n\r\n##[Example 1 - Read and Write](https://github.com/mkfu/MAE224/wiki/Example-1-:-Read-and-Write-Pins)\r\nQuick tutorial on how to use the Photon class to read and write data with analog pins\r\n\r\n```\r\nanalogRead()\r\nanalogWrite()\r\ndigitalRead()\r\ndigitalWrite()\r\n```\r\n\r\n##[Example 2 - Servos and PWMs](https://github.com/mkfu/MAE224/wiki/Example-2-:-Servos-and-PWMs)\r\nQuick tutorial on how use a servo with the Photon class and read a PWM signal \r\n\r\n```\r\nattachServo()\r\nmove()\r\ngetTone()\r\ndetachServo()\r\n```\r\n\r\n##[Technical Report Guidelines](https://github.com/mkfu/MAE224/wiki/Technical-Report-Guidelines)\r\nExpectations from technical reports\r\n***\r\n#Labs\r\n##[Lab 0 - Particle to Python Communications](https://github.com/mkfu/MAE224/wiki/Lab-0:-Python-to-Particle-Communication)\r\nQuick tutorial on how the Particle Photon communicates with the Python script\r\n\r\n##[Lab 1 - Hydrostatics](https://github.com/mkfu/MAE224/wiki/Lab-1:--Hydrostatics)\r\nSpecial topics in hydrostatics.\r\n\r\n##[Lab 2 - Pipe Flow](https://github.com/mkfu/MAE224/wiki/Lab-0:-Python-to-Particle-Communication)\r\nAre you in the Moody for some friction factors?\r\n\r\n##[Lab 3 - Boundary Layers](https://github.com/mkfu/MAE224/wiki/Lab-3:-Boundary-Layers)\r\nNot frosting.\r\n\r\n##[Lab 4 - Lift and Drag](https://github.com/mkfu/MAE224/wiki/Lab-4:-Lift-and-Drag)\r\nHow do planes fly? Magic?\r\n\r\n***\r\n#Wind Turbine Project\r\n\r\n##[Simulating In QBlade](https://github.com/mkfu/MAE224/wiki/Simulating-Wind-Turbine-Rotors-using-Qblade)\r\nCan it be done?\r\n\r\n##[Exporting Blades to Creo](https://github.com/mkfu/MAE224/wiki/Wind-Turbine-Creo-Export-Tutorial)\r\nSurely you can't export it to Creo.\r\n\r\n##[Design Requirements](https://github.com/mkfu/MAE224/wiki/Wind-Turbine-Design)\r\nHow big is too big?\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}